
package com.test.meetings.userwebService;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2020-02-23T15:14:08.157+08:00
 * Generated source version: 3.3.5
 *
 */
public final class UserWebService_UserService_Client {

    private static final QName SERVICE_NAME = new QName("http://webservice.openmeetings.apache.org/", "org.apache.openmeetings.webservice.UserWebService");

    private UserWebService_UserService_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = OrgApacheOpenmeetingsWebserviceUserWebService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        OrgApacheOpenmeetingsWebserviceUserWebService ss = new OrgApacheOpenmeetingsWebserviceUserWebService(wsdlURL, SERVICE_NAME);
        UserWebService port = ss.getUserService();

        {
        System.out.println("Invoking add...");
        java.lang.String _add_sid = "";
        com.test.meetings.userwebService.UserDTO _add_user = null;
        java.lang.Boolean _add_confirm = null;
        com.test.meetings.userwebService.UserDTO _add__return = port.add(_add_sid, _add_user, _add_confirm);
        System.out.println("add.result=" + _add__return);


        }
        {
        System.out.println("Invoking get...");
        java.lang.String _get_sid = "";
        java.util.List<com.test.meetings.userwebService.UserDTO> _get__return = port.get(_get_sid);
        System.out.println("get.result=" + _get__return);


        }
        {
        System.out.println("Invoking getRoomHash...");
        java.lang.String _getRoomHash_sid = "";
        com.test.meetings.userwebService.ExternalUserDTO _getRoomHash_user = null;
        com.test.meetings.userwebService.RoomOptionsDTO _getRoomHash_options = null;
        com.test.meetings.userwebService.ServiceResult _getRoomHash__return = port.getRoomHash(_getRoomHash_sid, _getRoomHash_user, _getRoomHash_options);
        System.out.println("getRoomHash.result=" + _getRoomHash__return);


        }
        {
        System.out.println("Invoking delete...");
        java.lang.String _delete_sid = "";
        long _delete_id = 0;
        com.test.meetings.userwebService.ServiceResult _delete__return = port.delete(_delete_sid, _delete_id);
        System.out.println("delete.result=" + _delete__return);


        }
        {
        System.out.println("Invoking deleteExternal...");
        java.lang.String _deleteExternal_sid = "";
        java.lang.String _deleteExternal_externaltype = "";
        java.lang.String _deleteExternal_externalid = "";
        com.test.meetings.userwebService.ServiceResult _deleteExternal__return = port.deleteExternal(_deleteExternal_sid, _deleteExternal_externaltype, _deleteExternal_externalid);
        System.out.println("deleteExternal.result=" + _deleteExternal__return);


        }
        {
        System.out.println("Invoking login...");
        java.lang.String _login_user = "";
        java.lang.String _login_pass = "";
        com.test.meetings.userwebService.ServiceResult _login__return = port.login(_login_user, _login_pass);
        System.out.println("login.result=" + _login__return);


        }

        System.exit(0);
    }

}
