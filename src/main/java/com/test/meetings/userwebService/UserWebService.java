package com.test.meetings.userwebService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2020-02-23T15:14:08.182+08:00
 * Generated source version: 3.3.5
 *
 */
@WebService(targetNamespace = "http://webservice.openmeetings.apache.org/", name = "UserWebService")
@XmlSeeAlso({ObjectFactory.class})
public interface UserWebService {

    @WebMethod
    @RequestWrapper(localName = "add", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.AddResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.meetings.userwebService.UserDTO add(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "user", targetNamespace = "")
        com.test.meetings.userwebService.UserDTO user,
        @WebParam(name = "confirm", targetNamespace = "")
        java.lang.Boolean confirm
    );

    @WebMethod
    @RequestWrapper(localName = "get", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.Get")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.GetResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<com.test.meetings.userwebService.UserDTO> get(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid
    );

    @WebMethod
    @RequestWrapper(localName = "getRoomHash", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.GetRoomHash")
    @ResponseWrapper(localName = "getRoomHashResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.GetRoomHashResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.meetings.userwebService.ServiceResult getRoomHash(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "user", targetNamespace = "")
        com.test.meetings.userwebService.ExternalUserDTO user,
        @WebParam(name = "options", targetNamespace = "")
        com.test.meetings.userwebService.RoomOptionsDTO options
    );

    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.DeleteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.meetings.userwebService.ServiceResult delete(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id
    );

    @WebMethod
    @RequestWrapper(localName = "deleteExternal", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.DeleteExternal")
    @ResponseWrapper(localName = "deleteExternalResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.DeleteExternalResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.meetings.userwebService.ServiceResult deleteExternal(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "externaltype", targetNamespace = "")
        java.lang.String externaltype,
        @WebParam(name = "externalid", targetNamespace = "")
        java.lang.String externalid
    );

    @WebMethod
    @RequestWrapper(localName = "login", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.meetings.userwebService.LoginResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.meetings.userwebService.ServiceResult login(

        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "pass", targetNamespace = "")
        java.lang.String pass
    );
}
