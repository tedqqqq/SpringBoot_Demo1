package com.test.openmeetings.roomservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2020-02-23T15:06:02.533+08:00
 * Generated source version: 3.3.5
 *
 */
@WebService(targetNamespace = "http://webservice.openmeetings.apache.org/", name = "RoomWebService")
@XmlSeeAlso({ObjectFactory.class})
public interface RoomWebService {

    @WebMethod
    @RequestWrapper(localName = "add", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.AddResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.RoomDTO add(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "room", targetNamespace = "")
        com.test.openmeetings.roomservice.RoomDTO room
    );

    @WebMethod
    @RequestWrapper(localName = "cleanWb", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.CleanWb")
    @ResponseWrapper(localName = "cleanWbResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.CleanWbResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult cleanWb(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id
    );

    @WebMethod
    @RequestWrapper(localName = "getPublic", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.GetPublic")
    @ResponseWrapper(localName = "getPublicResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.GetPublicResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<com.test.openmeetings.roomservice.RoomDTO> getPublic(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "type", targetNamespace = "")
        java.lang.String type
    );

    @WebMethod
    @RequestWrapper(localName = "count", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.CountResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult count(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "roomid", targetNamespace = "")
        java.lang.Long roomid
    );

    @WebMethod
    @RequestWrapper(localName = "users", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Users")
    @ResponseWrapper(localName = "usersResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.UsersResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<com.test.openmeetings.roomservice.UserDTO> users(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "roomid", targetNamespace = "")
        java.lang.Long roomid
    );

    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.DeleteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult delete(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id
    );

    @WebMethod
    @RequestWrapper(localName = "getExternal", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.GetExternal")
    @ResponseWrapper(localName = "getExternalResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.GetExternalResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.RoomDTO getExternal(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "type", targetNamespace = "")
        java.lang.String type,
        @WebParam(name = "externaltype", targetNamespace = "")
        java.lang.String externaltype,
        @WebParam(name = "externalid", targetNamespace = "")
        java.lang.String externalid,
        @WebParam(name = "room", targetNamespace = "")
        com.test.openmeetings.roomservice.RoomDTO room
    );

    @WebMethod
    @RequestWrapper(localName = "kickAll", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.KickAll")
    @ResponseWrapper(localName = "kickAllResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.KickAllResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult kickAll(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id
    );

    @WebMethod
    @RequestWrapper(localName = "kick", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Kick")
    @ResponseWrapper(localName = "kickResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.KickResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult kick(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "externalType", targetNamespace = "")
        java.lang.String externalType,
        @WebParam(name = "externalId", targetNamespace = "")
        java.lang.String externalId
    );

    @WebMethod
    @RequestWrapper(localName = "getRoomById", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.GetRoomById")
    @ResponseWrapper(localName = "getRoomByIdResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.GetRoomByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.RoomDTO getRoomById(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        java.lang.Long id
    );

    @WebMethod
    @RequestWrapper(localName = "hash", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Hash")
    @ResponseWrapper(localName = "hashResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.HashResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult hash(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "invite", targetNamespace = "")
        com.test.openmeetings.roomservice.InvitationDTO invite,
        @WebParam(name = "sendmail", targetNamespace = "")
        boolean sendmail
    );

    @WebMethod
    @RequestWrapper(localName = "open", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Open")
    @ResponseWrapper(localName = "openResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.OpenResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult open(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id
    );

    @WebMethod
    @RequestWrapper(localName = "close", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.Close")
    @ResponseWrapper(localName = "closeResponse", targetNamespace = "http://webservice.openmeetings.apache.org/", className = "com.test.openmeetings.roomservice.CloseResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.test.openmeetings.roomservice.ServiceResult close(

        @WebParam(name = "sid", targetNamespace = "")
        java.lang.String sid,
        @WebParam(name = "id", targetNamespace = "")
        long id
    );
}
