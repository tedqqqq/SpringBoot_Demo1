
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.test.openmeetings.roomservice;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2020-02-23T15:06:02.519+08:00
 * Generated source version: 3.3.5
 *
 */

@javax.jws.WebService(
                      serviceName = "org.apache.openmeetings.webservice.RoomWebService",
                      portName = "RoomWebServicePort",
                      targetNamespace = "http://webservice.openmeetings.apache.org/",
                      wsdlLocation = "http://192.168.0.25:5080/openmeetings/services/RoomService?wsdl",
                      endpointInterface = "com.test.openmeetings.roomservice.RoomWebService")

public class RoomWebServicePortImpl implements RoomWebService {

    private static final Logger LOG = Logger.getLogger(RoomWebServicePortImpl.class.getName());

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#add(java.lang.String sid, com.test.openmeetings.roomservice.RoomDTO room)*
     */
    public com.test.openmeetings.roomservice.RoomDTO add(java.lang.String sid, com.test.openmeetings.roomservice.RoomDTO room) {
        LOG.info("Executing operation add");
        System.out.println(sid);
        System.out.println(room);
        try {
            com.test.openmeetings.roomservice.RoomDTO _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#cleanWb(java.lang.String sid, long id)*
     */
    public com.test.openmeetings.roomservice.ServiceResult cleanWb(java.lang.String sid, long id) {
        LOG.info("Executing operation cleanWb");
        System.out.println(sid);
        System.out.println(id);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#getPublic(java.lang.String sid, java.lang.String type)*
     */
    public java.util.List<com.test.openmeetings.roomservice.RoomDTO> getPublic(java.lang.String sid, java.lang.String type) {
        LOG.info("Executing operation getPublic");
        System.out.println(sid);
        System.out.println(type);
        try {
            java.util.List<com.test.openmeetings.roomservice.RoomDTO> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#count(java.lang.String sid, java.lang.Long roomid)*
     */
    public com.test.openmeetings.roomservice.ServiceResult count(java.lang.String sid, java.lang.Long roomid) {
        LOG.info("Executing operation count");
        System.out.println(sid);
        System.out.println(roomid);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#users(java.lang.String sid, java.lang.Long roomid)*
     */
    public java.util.List<com.test.openmeetings.roomservice.UserDTO> users(java.lang.String sid, java.lang.Long roomid) {
        LOG.info("Executing operation users");
        System.out.println(sid);
        System.out.println(roomid);
        try {
            java.util.List<com.test.openmeetings.roomservice.UserDTO> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#delete(java.lang.String sid, long id)*
     */
    public com.test.openmeetings.roomservice.ServiceResult delete(java.lang.String sid, long id) {
        LOG.info("Executing operation delete");
        System.out.println(sid);
        System.out.println(id);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#getExternal(java.lang.String sid, java.lang.String type, java.lang.String externaltype, java.lang.String externalid, com.test.openmeetings.roomservice.RoomDTO room)*
     */
    public com.test.openmeetings.roomservice.RoomDTO getExternal(java.lang.String sid, java.lang.String type, java.lang.String externaltype, java.lang.String externalid, com.test.openmeetings.roomservice.RoomDTO room) {
        LOG.info("Executing operation getExternal");
        System.out.println(sid);
        System.out.println(type);
        System.out.println(externaltype);
        System.out.println(externalid);
        System.out.println(room);
        try {
            com.test.openmeetings.roomservice.RoomDTO _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#kickAll(java.lang.String sid, long id)*
     */
    public com.test.openmeetings.roomservice.ServiceResult kickAll(java.lang.String sid, long id) {
        LOG.info("Executing operation kickAll");
        System.out.println(sid);
        System.out.println(id);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#kick(java.lang.String sid, long id, java.lang.String externalType, java.lang.String externalId)*
     */
    public com.test.openmeetings.roomservice.ServiceResult kick(java.lang.String sid, long id, java.lang.String externalType, java.lang.String externalId) {
        LOG.info("Executing operation kick");
        System.out.println(sid);
        System.out.println(id);
        System.out.println(externalType);
        System.out.println(externalId);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#getRoomById(java.lang.String sid, java.lang.Long id)*
     */
    public com.test.openmeetings.roomservice.RoomDTO getRoomById(java.lang.String sid, java.lang.Long id) {
        LOG.info("Executing operation getRoomById");
        System.out.println(sid);
        System.out.println(id);
        try {
            com.test.openmeetings.roomservice.RoomDTO _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#hash(java.lang.String sid, com.test.openmeetings.roomservice.InvitationDTO invite, boolean sendmail)*
     */
    public com.test.openmeetings.roomservice.ServiceResult hash(java.lang.String sid, com.test.openmeetings.roomservice.InvitationDTO invite, boolean sendmail) {
        LOG.info("Executing operation hash");
        System.out.println(sid);
        System.out.println(invite);
        System.out.println(sendmail);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#open(java.lang.String sid, long id)*
     */
    public com.test.openmeetings.roomservice.ServiceResult open(java.lang.String sid, long id) {
        LOG.info("Executing operation open");
        System.out.println(sid);
        System.out.println(id);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.test.openmeetings.roomservice.RoomWebService#close(java.lang.String sid, long id)*
     */
    public com.test.openmeetings.roomservice.ServiceResult close(java.lang.String sid, long id) {
        LOG.info("Executing operation close");
        System.out.println(sid);
        System.out.println(id);
        try {
            com.test.openmeetings.roomservice.ServiceResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
